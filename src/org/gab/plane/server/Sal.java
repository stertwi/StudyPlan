package org.gab.plane.server;

// Generated 8-mar-2013 15.59.48 by Hibernate Tools 4.0.0

import java.sql.Timestamp;
import java.util.Iterator;
import java.util.Set;

import oracle.xdb.XMLType;


/**
 * Sal generated by hbm2java
 */
public class Sal  {

	/**
	 * 
	 */
	private Integer id;
	private Studente studente;
	private Piano piano;
	private Integer pianificazione = 0;
	private XMLType pianificazioneXML;
	private double oreEffettuateTotali = 0;
	private Timestamp startStudio;
	private Timestamp finishStudio;
	private Timestamp lastUpdate;

	public Sal() {
	}

	public Sal(Integer id) {
		this.id = id;
	}

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Studente getStudente() {
		return this.studente;
	}

	public void setStudente(Studente studente) {
		this.studente = studente;
	}

	public Piano getPiano() {
		return this.piano;
	}

	public void setPiano(Piano piano) {
		this.piano = piano;
	}

	public Integer getPianificazione() {
		return this.pianificazione;
	}

	public void setPianificazione(Integer pianificazione) {
		this.pianificazione = pianificazione;
	}

	/**
	 * @return the pianificazioneXML
	 */
	public XMLType getPianificazioneXML() {
		return pianificazioneXML;
	}

	/**
	 * @param pianificazioneXML the pianificazioneXML to set
	 */
	public void setPianificazioneXML(XMLType pianificazioneXML) {
		this.pianificazioneXML = pianificazioneXML;
	}

	public Timestamp getStartStudio() {
		return this.startStudio;
	}

	public void setStartStudio(Timestamp startStudio) {
		this.startStudio = startStudio;
	}

	public Timestamp getFinishStudio() {
		return this.finishStudio;
	}

	public void setFinishStudio(Timestamp finishStudio) {
		this.finishStudio = finishStudio;
	}

	/**
	 * @return the oreEffettuateTotali
	 */
	public double getOreEffettuateTotali() {
//		aggiornaOreEffettuateTotali();
		return oreEffettuateTotali;
	}

	/**
	 * @param oreEffettuateTotali the oreEffettuateTotali to set
	 */
	public void setOreEffettuateTotali(double oreEffettuateTotali) {
		this.oreEffettuateTotali = oreEffettuateTotali;
	}
	public void aggiornaOreEffettuateTotali() {
		Set<Corso> corsi = piano.getCorsi();
		Double cont = (double) 0;
		for(Iterator it=corsi.iterator(); it.hasNext();) {
			Corso corso = (Corso) it.next();
			cont = cont + corso.getOreEffettuate();
		}
		oreEffettuateTotali = cont;
	}

	public Timestamp getLastUpdate() {
		return this.lastUpdate;
	}

	public void setLastUpdate(Timestamp lastUpdate) {
		this.lastUpdate = lastUpdate;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((finishStudio == null) ? 0 : finishStudio.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		long temp;
		temp = Double.doubleToLongBits(oreEffettuateTotali);
		result = prime * result + (int) (temp ^ (temp >>> 32));
		result = prime * result
				+ ((pianificazione == null) ? 0 : pianificazione.hashCode());
		result = prime * result
				+ ((startStudio == null) ? 0 : startStudio.hashCode());
		return result;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Sal other = (Sal) obj;
		if (finishStudio == null) {
			if (other.finishStudio != null)
				return false;
		} else if (!finishStudio.equals(other.finishStudio))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (Double.doubleToLongBits(oreEffettuateTotali) != Double
				.doubleToLongBits(other.oreEffettuateTotali))
			return false;
		if (pianificazione == null) {
			if (other.pianificazione != null)
				return false;
		} else if (!pianificazione.equals(other.pianificazione))
			return false;
		if (startStudio == null) {
			if (other.startStudio != null)
				return false;
		} else if (!startStudio.equals(other.startStudio))
			return false;
		return true;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return "Sal [id=" + id + ", pianificazione=" + pianificazione
				+ ", oreEffettuateTotali=" + oreEffettuateTotali + ", startStudio="
				+ startStudio + ", finishStudio=" + finishStudio + "]";
	}

	

}
